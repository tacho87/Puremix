<layout>main</layout>

<head>
  <title>Basic Form Test - PureMix Framework</title>
  <meta name="description" content="Testing basic form submission and handling">
</head>

<loader>
  async function loadFormTest(request, actionResult) {
    // Show success message from form submission
    if (actionResult?.success) {
      return {
        data: { message: actionResult.message, submitted: actionResult.data },
        state: { showSuccess: true }
      };
    }
    
    // Regular page load
    return {
      data: { 
        title: "Basic Form Test",
        description: "Testing basic form functionality"
      },
      state: { showSuccess: false }
    };
  }
</loader>

<div class="container">
  <h1>{loadFormTest.data.title}</h1>
  <p>{loadFormTest.data.description}</p>
  
  {loadFormTest.state.showSuccess ? 
    <div class="success-message" id="success-message">
      <h2>âœ… Form Submitted Successfully!</h2>
      <p>{loadFormTest.data.message}</p>
      <div class="submitted-data">
        <h3>Submitted Data:</h3>
        <p><strong>Name:</strong> {loadFormTest.data.submitted.name}</p>
        <p><strong>Email:</strong> {loadFormTest.data.submitted.email}</p>
        <p><strong>Message:</strong> {loadFormTest.data.submitted.message}</p>
      </div>
    </div>
  : <span></span>}
  
  <form onsubmit="handleFormSubmission" class="test-form">
    <input type="hidden" name="_action" value="handleFormSubmission">
    <div class="form-group">
      <label for="name">Name:</label>
      <input type="text" id="name" name="name" required placeholder="Enter your name">
    </div>
    
    <div class="form-group">
      <label for="email">Email:</label>
      <input type="email" id="email" name="email" required placeholder="Enter your email">
    </div>
    
    <div class="form-group">
      <label for="message">Message:</label>
      <textarea id="message" name="message" required placeholder="Enter your message"></textarea>
    </div>
    
    <button type="submit" id="submit-btn">Submit Form</button>
  </form>
  
  <div class="test-info">
    <h3>Test Information</h3>
    <ul>
      <li>This form tests basic POST submission</li>
      <li>Server-side processing with <code>&lt;script server&gt;</code></li>
      <li>Form validation and data handling</li>
      <li>Template rendering with conditional display</li>
    </ul>
  </div>
</div>

<script server>
  async function handleFormSubmission(formData, request) {
    const { name, email, message } = formData;
    debugger;
    // Basic validation
    if (!name || !email || !message) {
      return {
        error: 'All fields are required',
        success: false
      };
    }
    
    if (!email.includes('@')) {
      return {
        error: 'Please enter a valid email address',
        success: false
      };
    }
    
    // Simulate processing
    console.log('Processing form submission:', { name, email, message });
    
    return {
      success: true,
      message: `Thank you ${name}! Your message has been received.`,
      data: { name, email, message },
      timestamp: new Date().toISOString()
    };
  }
</script>

<style>
  .container {
    max-width: 600px;
    margin: 0 auto;
    padding: 20px;
    font-family: -apple-system, BlinkMacSystemFont, sans-serif;
  }
  
  .success-message {
    background: #d4edda;
    border: 1px solid #c3e6cb;
    border-radius: 8px;
    padding: 20px;
    margin-bottom: 20px;
    color: #155724;
  }
  
  .submitted-data {
    background: #f8f9fa;
    border-radius: 4px;
    padding: 15px;
    margin-top: 10px;
  }
  
  .test-form {
    background: #f8f9fa;
    border-radius: 8px;
    padding: 20px;
    margin: 20px 0;
  }
  
  .form-group {
    margin-bottom: 15px;
  }
  
  .form-group label {
    display: block;
    margin-bottom: 5px;
    font-weight: 500;
  }
  
  .form-group input,
  .form-group textarea {
    width: 100%;
    padding: 8px 12px;
    border: 1px solid #ddd;
    border-radius: 4px;
    font-size: 16px;
    box-sizing: border-box;
  }
  
  .form-group textarea {
    height: 100px;
    resize: vertical;
  }
  
  button {
    background: #007bff;
    color: white;
    border: none;
    padding: 12px 24px;
    border-radius: 4px;
    font-size: 16px;
    cursor: pointer;
  }
  
  button:hover {
    background: #0056b3;
  }
  
  .test-info {
    background: #e7f3ff;
    border-radius: 8px;
    padding: 20px;
    margin-top: 20px;
  }
  
  .test-info ul {
    margin: 10px 0;
    padding-left: 20px;
  }
  
  code {
    background: #f1f3f4;
    padding: 2px 4px;
    border-radius: 3px;
    font-family: Monaco, monospace;
    font-size: 14px;
  }
</style>

<script>
  // Progressive enhancement for better UX
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('test-form');
    const submitBtn = document.getElementById('submit-btn');
    
    if (form && submitBtn) {
      form.addEventListener('submit', async (e) => {
        // Allow normal form submission but add loading state
        submitBtn.textContent = 'Submitting...';
        submitBtn.disabled = true;
        
        // Re-enable after short delay if something goes wrong
        setTimeout(() => {
          submitBtn.textContent = 'Submit Form';
          submitBtn.disabled = false;
        }, 10000);
      });
    }
  });
</script>